name: Build/release

on: push

jobs:
  release_linux_armv7:
    name: Release Linux
    if: startsWith(github.ref, 'refs/tags/') == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install building stuff
        run: sudo apt-get install build-essential clang libdbus-1-dev libgtk-3-dev \
              libnotify-dev libgnome-keyring-dev \
              libasound2-dev libcap-dev libcups2-dev libxtst-dev \
              libxss1 libnss3-dev gcc-multilib g++-multilib curl \
              gperf bison python-dbusmock openjdk-8-jre \
              libc6-dev-armhf-cross linux-libc-dev-armhf-cross \
              g++-arm-linux-gnueabihf
      - name: Install Dependencies
        run: npm install
      - name: Build Linux armv7l
        run: GH_TOKEN=${{ secrets.GITHUB_TOKEN }} npm run release-linux-arm

  release_linux:
    name: Release Linux
    if: startsWith(github.ref, 'refs/tags/') == true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install Dependencies
        run: npm install
      - name: Build Linux
        run: GH_TOKEN=${{ secrets.GITHUB_TOKEN }} npm run release_linux

  release_win:
    name: Release Windows
    if: startsWith(github.ref, 'refs/tags/') == true
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install Dependencies
        run: npm install
      - name: Build Windows
        run: $env:GH_TOKEN='${{ secrets.GITHUB_TOKEN }}'; npm run release_win